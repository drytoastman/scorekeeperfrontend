import org.gradle.plugins.ide.eclipse.model.AccessRule

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'
apply plugin: 'eclipse'

eclipse {
    classpath {
        file {
            whenMerged {
              // remove warnings about non-API class use
              // these are javafx API, I don't know why it complains about those classes
                def jre = entries.find { it.path.contains 'org.eclipse.jdt.launching.JRE_CONTAINER' }
                jre.accessRules.add(new AccessRule('0', 'javafx/**'))
            }
        }
    }
}


def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--abbrev=0'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (Exception e) {
        return "latest"
    }
}

version = getVersionName()
sourceCompatibility = 1.8
mainClassName = 'org.wwscc.tray.ScorekeeperSystem'
shadowJar.classifier = ""
shadowJar.baseName = "scorekeeper"
defaultTasks 'shadowJar'

task createUbuntuSetup(type: Copy) {
    from 'installers'
    into "$buildDir"
    include 'ubuntu.template'
	rename('ubuntu.template', "ubuntusetup-${version}.sh")
    expand(git_version: version)
}

jar {
    manifest {
        attributes("Implementation-Version": version)
    }
}

repositories {
    jcenter()
}

dependencies {
    compile 'com.miglayout:miglayout-swing:5.0'
    compile 'com.neuronrobotics:nrjavaserial:3.12.1'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'org.postgresql:postgresql:42.1.4'
    compile 'com.jcraft:jsch:0.1.54'
    compile 'org.apache.commons:commons-io:1.3.2'

    testRuntime 'junit:junit:4.12'
}

